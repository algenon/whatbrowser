{"version":3,"sources":["../src/whatbrowser.js"],"names":["init","$","UAParser","navigator","window","document","resolutionToStr","width","height","browserSize","source","value","browser_size","toString","cookies","hasCookies","cookieEnabled","cookie","ret","indexOf","javafn","java","enabled","javaEnabled","version","language","userLanguage","online","onLine","screenfn","screen","color_depth","colorDepth","pixel_ratio","devicePixelRatio","str","resolution","depth","retinaResolution","ua","browserToString","browser","name","major","deviceToString","device","vendor","model","type","engineToString","engine","osToString","os","getResult","userAgent","geo","positionToString","position","latitude","longitude","addressToString","address","country","region","city","WhatBrowser","self","flash","undefined","jQuery"],"mappings":"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","file":"whatbrowser.js","sourcesContent":["/*\n * 'What is my browser' object.\n * Contains everything known about the browser,\n * plus optional geolocation.\n */\n(function init($, UAParser) {\n    const navigator = window.navigator;\n    const document = window.document;\n\n    function resolutionToStr(width, height) {\n        return `${width} × ${height} px`;\n    }\n\n    function browserSize(source) {\n        const value = (source && source.browser_size) || {\n            height: $(window).height(),\n            width: $(window).width()\n        };\n        value.toString = () => resolutionToStr(value.width, value.height);\n        return value;\n    }\n\n    function cookies(source) {\n        function hasCookies() {\n            if (navigator.cookieEnabled) {\n                return true;\n            }\n            // create and delete cookie\n            document.cookie = \"cookietest=1\";\n            const ret = document.cookie.indexOf(\"cookietest=\") !== -1;\n            document.cookie =\n                \"cookietest=1; expires=Thu, 01-Jan-1970 00:00:01 GMT\";\n            return ret;\n        }\n\n        return (source && source.cookies) || hasCookies();\n    }\n\n    function javafn(source) {\n        const value = (source && source.java) || {\n            enabled: navigator.javaEnabled && navigator.javaEnabled(),\n            version: null\n        };\n        value.toString = () => {\n            return value.enabled ? value.version || \"да\" : \"нет\";\n        };\n        return value;\n    }\n\n    function language(source) {\n        return (\n            (source && source.language) ||\n            navigator.language ||\n            navigator.userLanguage\n        );\n    }\n\n    function online(source) {\n        return (source && source.online) || navigator.onLine;\n    }\n\n    function screenfn(source) {\n        const value =\n            (source && source.screen) ||\n            (window.screen && {\n                color_depth: window.screen.colorDepth,\n                pixel_ratio: window.devicePixelRatio,\n                height: window.screen.height,\n                width: window.screen.width\n            });\n        value.toString = () => {\n            let str = \"\";\n            if (value) {\n                const resolution = resolutionToStr(value.width, value.height);\n                const depth = `${value.color_depth} bit`;\n                str = `${resolution}, ${depth}`;\n                if (value.pixel_ratio && value.pixel_ratio > 1) {\n                    const retinaResolution = resolutionToStr(\n                        value.width * value.pixel_ratio,\n                        value.height * value.pixel_ratio\n                    );\n                    str += ` (retina ${retinaResolution})`;\n                }\n            }\n            return str;\n        };\n        return value;\n    }\n\n    function ua(source) {\n        function browserToString(browser) {\n            let str = browser.name || \"\";\n            str += (browser.major && ` ${browser.major}`) || \"\";\n            str += (browser.version && ` (${browser.version})`) || \"\";\n            return str;\n        }\n\n        function deviceToString(device) {\n            let str = device.vendor || \"\";\n            str += (device.model && ` ${device.model}`) || \"\";\n            str += (device.type && ` (${device.type})`) || \"\";\n            return str;\n        }\n\n        function engineToString(engine) {\n            let str = engine.name || \"\";\n            str += (engine.version && ` ${engine.version}`) || \"\";\n            return str;\n        }\n\n        function osToString(os) {\n            let str = os.name || \"\";\n            str += (os.version && ` ${os.version}`) || \"\";\n            return str;\n        }\n\n        let value = {};\n        if (UAParser) {\n            value = (source && source.ua) || new UAParser().getResult();\n            value.toString = () => value.ua;\n            value.browser.toString = () => browserToString(value.browser);\n            value.device.toString = () => deviceToString(value.device);\n            value.engine.toString = () => engineToString(value.engine);\n            value.os.toString = () => osToString(value.os);\n        } else {\n            value = {\n                ua: navigator.userAgent\n            };\n        }\n        return value;\n    }\n\n    function geo(source) {\n        function positionToString(position) {\n            return position.latitude\n                ? `${position.latitude}, ${position.longitude}`\n                : \"\";\n        }\n\n        function addressToString(address) {\n            let str = address.country || \"\";\n            str += (address.region && `', ${address.region}`) || \"\";\n            str += (address.city && `', ${address.city}`) || \"\";\n            return str;\n        }\n\n        const value = source;\n        if (value && value.position) {\n            value.position.toString = () => positionToString(value.position);\n        }\n        if (value && value.address) {\n            value.address.toString = () => addressToString(value.address);\n        }\n        return value;\n    }\n\n    function WhatBrowser(source) {\n        const self = this;\n        self.browser_size = browserSize(source);\n        self.cookies = cookies(source);\n        self.flash = null;\n        self.javafn = javafn(source);\n        self.language = language(source);\n        self.online = online(source);\n        self.screenfn = screenfn(source);\n        self.ua = ua(source);\n        self.geo = geo((source && source.geo) || undefined);\n    }\n\n    window.WhatBrowser = WhatBrowser;\n    return WhatBrowser;\n})(window.jQuery, window.UAParser);\n"]}